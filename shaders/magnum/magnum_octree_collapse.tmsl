imports: [
    { name: "first_node_id" type: "uint" }
    { name: "first_node_depth" type: "uint" }
]

compile: {
    variations : [
        { systems: ["magnum_dc_octree", "magnum_terrain_octree_system", "magnum_terrain_region_contouring_system"] }
    ]
}

compute_shader: {

    import_system_semantics: [ "dispatch_thread_id" ]

    attributes: {
        num_threads: [1, 8, 1]
    }

    code: [[
        uint node_id = (load_first_node_id() + dispatch_thread_id.x) * 8 + dispatch_thread_id.y + 1;
        uint parent_depth = load_first_node_depth();
        collapse_one_node(get_octree(), node_id, parent_depth + 1, load_tolerance(), get_densities(), get_collapsed_octree(), get_vertices(), get_region_info());

        [branch]
        if (parent_depth == 0) {
            AllMemoryBarrierWithGroupSync();
            [branch]
            if (dispatch_thread_id.y == 0) {
                // collapse root
                collapse_one_node(get_octree(), 0, 0, load_tolerance(), get_densities(), get_collapsed_octree(), get_vertices(), get_region_info());
            }
        }
    ]]
}
